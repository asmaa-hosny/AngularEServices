<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <AspNetCoreHostingModel>OutOfProcess</AspNetCoreHostingModel>
    <AspNetCoreModuleName>AspNetCoreModuleV2</AspNetCoreModuleName>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="AutoMapper" Version="9.0.0" />
    <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="6.1.1" />

    <PackageReference Include="Microsoft.AspNetCore.App" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="3.1.0" />
  
    <PackageReference Include="Microsoft.AspNetCore.SpaServices" Version="3.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.StaticFiles" Version="2.2.0" />
    <PackageReference Include="Microsoft.Extensions.ApiDescription.Client" Version="3.0.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.Extensions.Hosting" Version="3.1.0" />
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="3.1.1" />
    <PackageReference Include="Newtonsoft.Json" Version="12.0.2" />
    <PackageReference Include="NSwag.ApiDescription.Client" Version="13.0.5">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Swashbuckle.AspNetCore" Version="5.0.0-rc5" />
    <PackageReference Include="System.Reflection" Version="4.3.0" />
    <PackageReference Include="System.Reflection.TypeExtensions" Version="4.5.1" />
    <!--<PackageReference Include="System.ServiceModel.Duplex" Version="4.5.3" />
    <PackageReference Include="System.ServiceModel.NetTcp" Version="4.5.3" />
    <PackageReference Include="System.ServiceModel.Primitives" Version="4.5.3" />
    <PackageReference Include="System.ServiceModel.Security" Version="4.5.3" />-->
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Compile Remove="wwwroot\Attachement\Identificationletter\**" />
    <Compile Remove="wwwroot\Attachement\Requisition\**" />
    <Content Remove="$(SpaRoot)**" />
    <Content Remove="wwwroot\Attachement\Identificationletter\**" />
    <Content Remove="wwwroot\Attachement\Requisition\**" />
    <EmbeddedResource Remove="wwwroot\Attachement\Identificationletter\**" />
    <EmbeddedResource Remove="wwwroot\Attachement\Requisition\**" />
    <None Remove="$(SpaRoot)**" />
    <None Remove="wwwroot\Attachement\Identificationletter\**" />
    <None Remove="wwwroot\Attachement\Requisition\**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <Compile Remove="Controllers\IdentificationLetterController.cs" />
    <Compile Remove="Controllers\MissionCompletionController.cs" />
    <Compile Remove="Controllers\RequisitionController.cs" />
    <Compile Remove="Controllers\SampleDataController.cs" />
    <Compile Remove="Mapper\MCMappingProfile.cs" />
    <Compile Remove="Mapper\StringNameResolver.cs" />
    <Compile Remove="ViewModels\IdentificationLetterViewModel.cs" />
    <Compile Remove="ViewModels\MissionCompletionViewModel.cs" />
    <Compile Remove="ViewModels\PoInvoiceDTO.cs" />
    <Compile Remove="ViewModels\RequisitionBudgetViewModel.cs" />
    <Compile Remove="ViewModels\RequisitionViewModel.cs" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\src\assets\scss\bootstrap.min.css" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="Connected Services\" />
    <Folder Include="Logs\" />
    <Folder Include="wwwroot\Attachement\Download\" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\EServicesInfrustructure\EServicesInfrustructure.csproj" />
 <ProjectReference Include="..\EServicesApplication\EServicesApplication.csproj" />
    <ProjectReference Include="..\EServicesCommon\EServicesCommon.csproj" />
    <ProjectReference Include="..\EServicesPersistance\EServicesPersistance.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Reference Include="Microsoft.SharePoint.Client.Portable">
      <HintPath>Libraries\Microsoft.SharePoint.Client.Portable.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.SharePoint.Client.Runtime.Portable">
      <HintPath>Libraries\Microsoft.SharePoint.Client.Runtime.Portable.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.SharePoint.Client.Runtime.Windows">
      <HintPath>Libraries\Microsoft.SharePoint.Client.Runtime.Windows.dll</HintPath>
    </Reference>
  </ItemGroup>

  <ItemGroup>
    <WCFMetadata Include="Connected Services" />
  </ItemGroup>

  <ItemGroup>
    <Content Update="autofac.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Update="serilogsettings.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build --prod" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

  <ProjectExtensions><VisualStudio><UserProperties properties_4launchsettings_1json__JsonSchema="http://json.schemastore.org/lsdlschema" /></VisualStudio></ProjectExtensions>

</Project>
